%ECE717/817 - Introduction to Digital Image Processing 
%Copyright ECE Department University of New Hampshire 2008
%ALL RIGHTS RESERVED
%
%                     Convolution and filtering
%
% ---------------------------------------------------------------
close all       % Remove all figures
clear all       % Clear the work space, i.e. all stored variables
clc             % Clear command window
% ---------------------------------------------------------------

% ------------------------ FILTER KERNELS -----------------------
% You can perform kernel filtering of an image using MATLAB functions
% "imfilter" or "filter2".  The filter kernel is a matrix that can be
% either specified manually or generated by function "fspecial". Please
% refer to MATLAB Help for detailed description.

%  ------ Lowpass filter kernels ------
Lowpass01 = [1 1 1; 1 1 1; 1 1 1] * 1/9;
Lowpass02 = fspecial( 'average', 3 ) ;

% Gaussian lowpass filter
GaussianLowpass = fspecial('gaussian');

% ------- Highpass filter kernels -----
% Simple Highpass filter
Highpass3x3 = [ -1, -1, -1; -1, 8, -1; -1, -1, -1 ]
% Horizontal edge detection
EdgeHorizontal01 = [ 1 1 1; 0 0 0; -1 -1 -1]; % or
EdgeHorizontal02 = fspecial('prewitt');
% Vertical edge detection
EdgeVertical01 = EdgeHorizontal01'; % transponned horizontal
EdgeVertical02 = EdgeHorizontal02';
% Sobel 
SobelHorizontal01 = fspecial('sobel');
SobelHorizontal02 = [-1 0 1 ; -2 0 2 ; -1 0 1];
SobelVertical01 = SobelHorizontal01';
SobelVertical02 = [ 1 2 1 ; 0 0 0 ; -1 -2 -1 ];
% Laplacian
Laplacian01 = fspecial('laplacian');

% Unsharp mask
UnsharpKernel = fspecial('unsharp');

% ---------------------------------------------------------------
%%
% --------------------- USER-DEFINED KERNELS --------------------  
% Please type your filter kernels in this section

% ---------------------------------------------------------------

% Read image from file
I = imread('peppers.png');
% I = imread('saturn.png');
% I = imread('gantrycrane.png');
% Convert color image to grayscale
Ii = rgb2gray(I);

% Apply "salt and pepper" noise to the image
% Ii = imnoise(Ii,'salt & pepper',0.02);
 %%
% -------------------- IMAGE FILTERING ---------------------------
Kernel = Lowpass01   % <- Put your filter here
Io = imfilter(Ii, Kernel, 'conv'); % Filter the image using convolution

% Display
figure(1), imshow(Ii)
title('Input image')

figure(2), imshow(Io)
title('Filtered image')

% Plot filter kernel
figure(3)
[Xmax, Ymax] = size(Kernel);
[X,Y] = meshgrid(1:Xmax,1:Ymax); % creates XY grid for 3D display
mesh(X, Y, Kernel) % displays matrix as a mesh
% surf(X, Y, Kernel) % displays matrix as a surface
title('Filter kernel')
